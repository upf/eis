<?php

// **** EIS ****
// eis device configuration
// available into global var: $eis_dev_conf
// upf, May2013

/////////// mandatory configuration fields ///////////

// deviceID (the name of the directory where it is) and implementation version
$eis_dev_conf["ID"]=basename(substr(dirname(__FILE__),0,-8));
$eis_dev_conf["version"]="0.0.2";		// 3 numbers separated by full stop
$eis_dev_conf["date"]="2013-06-12";		// yyyy-mm-dd format
$eis_dev_conf["author"]="F.Civerchia,S.Patti,M.Battaglioni,E.Pacioni, revised by upf";

// device dir absolute path (terminated without /)
$eis_dev_conf["path"]=$eis_conf["path"]."/devices/".$eis_dev_conf["ID"];

// prefix for database tables owned by this device
$eis_dev_conf["tablepfx"]=str_replace(".","_",$eis_dev_conf["ID"]);

// realtime interface communication port (on 127.0.0.1)
// must be different for each device installed in a host
$eis_dev_conf["ifport"]=41100;

// device class (functional type, see documentation)
$eis_dev_conf["class"]="electrical_storage";

// device short description
$eis_dev_conf["description"]="configurable smart UPS with batteries";

// device electrical type: "load", "generator" or "load&gen"
$eis_dev_conf["type"]="load&gen";


/////////// available configurations ///////////

// config = specific configuration description
// cpowerX = max consumed power in watts on unprotected line
// cpowerX = max generated power in watts on protected line
// bmaxstoredenergy = battery energy capacity in kWh
// bminstoredenergy = battery min energy charge as % of bmaxstoredenergy 
// bchargepower = battery charger total power in watts
// bfloatpower = battery foalting cherge power in watts
$eis_dev_conf["configurations"]=array(
	// 18kW UPS with 24kWh battery capacity
	"9kW_ups_16kWh_battery" => array (
		"config"=>"18kW 3P UPS with 24kWh batteries",
		"cpower1"=>3000,
		"cpower2"=>3000,
		"cpower3"=>3000,
		"gpower1"=>3000,
		"gpower2"=>3000,
		"gpower3"=>3000,
		"bmaxstoredenergy"=>24,
		"bminstoredenergy"=>30,
		"bchargepower"=>3000,
		"bfloatpower"=>48
	),
	// 18kW UPS with 24kWh battery capacity
	"18kW_ups_24kWh_battery" => array (
		"config"=>"18kW 3P UPS with 24kWh batteries",
		"cpower1"=>6000,
		"cpower2"=>6000,
		"cpower3"=>6000,
		"gpower1"=>6000,
		"gpower2"=>6000,
		"gpower3"=>6000,
		"bmaxstoredenergy"=>24,
		"bminstoredenergy"=>30,
		"bchargepower"=>3000,
		"bfloatpower"=>48
	)
);


// -- device initial status array -- //

// these value will be used during device initialization
// status variables are permanent from an execution to another
// put here any variable that you want to have as permanent
$eis_dev_conf["status"]=array(
	// set default configuration
	"configID" => "18kW_ups_24kWh_battery",
	// UPS status
	"glinestatus"=>"ok",		// "ok","disconnected","overload","overgen" (last 3 == blackout on protected line)
	// load vars for unprotected line
	"cline"		=> "unprotected",	// will be always "unprotected" for storages
	"cpower1"	=> 0,			// consumption power (watt) on phase 1
	"cpower2"	=> 0,			// same for phase 2
	"cpower3"	=> 0,			// same for phase 3
	"cenergy1"	=> 0, 			// total energy (kWh) consumed by phase 1 from the beginning of simulation
	"cenergy2"	=> 0, 			// same for phase 2
	"cenergy3"	=> 0, 			// same for phase 3000
	// generator vars for protected line
	"gline"		=> "protected",	// will be always "protected" for storages
	"gpower1"	=> 0,			// generation power (watt) on phase 1
	"gpower2"	=> 0,			// same for phase 2
	"gpower3"	=> 0,			// same for phase 2
	"genergy1"	=> 0, 			// total energy (kWh) generated by phase 1 from the beginning of simulation
	"genergy2"	=> 0, 			// same for phase 2
	"genergy3"	=> 0, 			// same for phase 3
	// battery and UPS vars
	"bypass"	=> 0,			// current bypass state: 100=all gline power drawn from cline, 0=all gline power drawn from battery
								// x=gline power drawn x% from cline and (100-x)% from battery  
	"chargebattery" => false,	// current battery charger state (true=on, false=off)
	"benergy"	=> 100,			// current percentage energy stored in the battery (0 --> 100)
	"bcpower"	=> 0,			// current battery charge power (watt)
	"bgpower"	=> 0,			// current battery discharge power (watt)
	"bcenergy"	=> 0,			// energy assorbed by the battery from the beginning of simulation (kWh)
	"bgenergy"	=> 0			// energy released by the battery from the beginning of simulation (kWh)
);


?>
